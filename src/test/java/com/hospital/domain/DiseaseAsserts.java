package com.hospital.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DiseaseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiseaseAllPropertiesEquals(Disease expected, Disease actual) {
        assertDiseaseAutoGeneratedPropertiesEquals(expected, actual);
        assertDiseaseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiseaseAllUpdatablePropertiesEquals(Disease expected, Disease actual) {
        assertDiseaseUpdatableFieldsEquals(expected, actual);
        assertDiseaseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiseaseAutoGeneratedPropertiesEquals(Disease expected, Disease actual) {
        assertThat(actual)
            .as("Verify Disease auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiseaseUpdatableFieldsEquals(Disease expected, Disease actual) {
        assertThat(actual)
            .as("Verify Disease relevant properties")
            .satisfies(a -> assertThat(a.getDiseaseName()).as("check diseaseName").isEqualTo(expected.getDiseaseName()))
            .satisfies(a -> assertThat(a.getDiagnosisDate()).as("check diagnosisDate").isEqualTo(expected.getDiagnosisDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiseaseUpdatableRelationshipsEquals(Disease expected, Disease actual) {
        assertThat(actual)
            .as("Verify Disease relationships")
            .satisfies(a -> assertThat(a.getPatient()).as("check patient").isEqualTo(expected.getPatient()));
    }
}
